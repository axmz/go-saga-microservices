services:
  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka
    restart: unless-stopped

  kafka-connect:
    build:
      context: ./infra/kafka-connect
    restart: unless-stopped
    ports:
      - "8086:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=connect_configs
      - OFFSET_STORAGE_TOPIC=connect_offsets
      - STATUS_STORAGE_TOPIC=connect_statuses
      - CONFIG_STORAGE_REPLICATION_FACTOR=1
      - OFFSET_STORAGE_REPLICATION_FACTOR=1
      - STATUS_STORAGE_REPLICATION_FACTOR=1
      - ENABLE_DEBEZIUM_SCRIPTING=true
      - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.storage.StringConverter
      - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.storage.ByteArrayConverter
      - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
    depends_on:
      - kafka
      - order-db
    volumes:
      - ./infra/connectors:/configs:ro
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8083/connectors"]
      interval: 10s
      timeout: 5s
      retries: 5

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    ports:
      - "8085:8080"
    environment:
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped

  inventory-db:
    image: postgres:17.5
    environment:
      POSTGRES_USER: inventory
      POSTGRES_PASSWORD: inventory
      POSTGRES_DB: inventory
    ports:
      - "5433:5432"
    volumes:
      - pg_inventory_data:/var/lib/postgresql/data
      - ./services/inventory/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped

  order-db:
    image: postgres:17.5
    environment:
      POSTGRES_USER: order
      POSTGRES_PASSWORD: order
      POSTGRES_DB: order
    # Enables logical replication for Debezium CDC
    command: [
      "postgres",
      "-c", "wal_level=logical",
      "-c", "max_replication_slots=10",
      "-c", "max_wal_senders=10"
    ]
    ports:
      - "5434:5432"
    volumes:
      - pg_order_data:/var/lib/postgresql/data
      - ./services/order/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped

volumes:
  kafka_data:
  pg_inventory_data:
  pg_order_data:
